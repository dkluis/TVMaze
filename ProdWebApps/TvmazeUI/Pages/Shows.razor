@namespace TvmazeUI.Pages
@page "/shows"

@inject WebShows          _webShowsService
@inject DataExchange      _dataExchangeService
@inject NavigationManager _navigationManagerService


@code {
    private List<ShowsInfo> _showsInfoList = new();
    string?                 _searchString;
    int                     _idx;

    private void ReviewNewShows()
    {
        _showsInfoList = _webShowsService.GetShowsByTvmStatus("New");
        _searchString  = "";
    }

    private void ReviewReviewShows()
    {
        _showsInfoList = _webShowsService.GetShowsByTvmStatus("Reviewing");
        _searchString  = "";
    }

    private void FindShows()
    {
        _showsInfoList = _webShowsService.FindShows(_searchString);
    }

    private void EditShow(ShowsInfo si)
    {
        if (si.TvmStatus == "New")
        {
            LogModel.Record("Web UI", "Shows Page", $"Editing Show to Reviewing {si.TvmShowId}: {si.ShowName}", 1);
            _webShowsService.SetTvmStatusShow(si.TvmShowId, "Reviewing");
            _searchString = si.ShowName;
            FindShows();
            _searchString = "";
        } else if (si.TvmStatus == "Following")
        {
            LogModel.Record("Web UI", "Shows Page", $"Editing Show {si.TvmShowId}: {si.ShowName} setting MediaType to {si.MediaType} and AltShowName to {si.AltShowName}", 1);
            _webShowsService.SetMtAndAsnShow(si.TvmShowId, si.MediaType!, si.AltShowName!);
            _searchString = si.ShowName;
            FindShows();
            _searchString = "";
        }
    }

    private void DeleteShow(ShowsInfo si)
    {
        LogModel.Record("Web UI", "Shows Page", $"Deleting Show {si.TvmShowId}: {si.ShowName}", 1);
        _webShowsService.DeleteShow(si.TvmShowId);

        if (si.TvmStatus == "New")
        {
            ReviewNewShows();
        } else
        {
            ReviewReviewShows();
        }

        _searchString = "";
    }

    private void SkipShow(ShowsInfo si)
    {
        _webShowsService.AppInfo.TxtFile.Write($"Setting Show to Skipping {si.TvmShowId}: {si.ShowName}");
        _webShowsService.SkipShow(si.TvmShowId);
        _searchString = si.ShowName;
        FindShows();
        _searchString = "";
    }

    private void FindEpisodes(ShowsInfo si)
    {
        _dataExchangeService.ShowName     = si.AltShowName == "" ? si.ShowName : si.AltShowName;
        _dataExchangeService.SendingPage  = "Shows";
        _dataExchangeService.IntendedPage = "Episodes";
        _navigationManagerService.NavigateTo("/episodes");
    }

}

@{ _dataExchangeService.LastPage = "Shows"; }
<h1>Shows</h1>
<em>To Follow or Unfollow a show use the TVMaze Show Url</em>

<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text">%</span>
    </div>
    <input @bind="_searchString"/>
    <div class="input-group-append">
        <span class="input-group-text">%</span>
    </div>
    <button class="btn btn-info" @onclick="FindShows">Find Shows</button>
    &#8195;<button class="btn btn-info" @onclick="ReviewNewShows">New Shows</button>
    &#8195;<button class="btn btn-info" @onclick="ReviewReviewShows">Review Shows</button>
</div>

<p></p>

<div>
    <h6>Shows - Table</h6>
    <table class="table table-striped" style="font-size: 85%; line-height: 85%">
        <thead>
        <tr>
            <th>Show Id</th>
            <th>Name</th>
            <th>Show Url</th>
            <th>Alt Name</th>
            <th>Finder</th>
            <th>Media Type</th>
            <th>Status</th>
            <th>ShowStatus</th>
            <th>Update Date</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @{ _idx = 0; }
        @foreach (var si in _showsInfoList)
        {
            <tr>
                <td>@si.TvmShowId</td>
                <td>@si.ShowName</td>
                <td>
                    <a href="@si.TvmUrl" target="_blank">TVMaze</a>
                </td>
                <td>
                    @if (si.TvmStatus == "Following")
                    {
                        <input @bind="si.AltShowName"/>
                    } else
                    {
                        @si.AltShowName
                    }
                </td>
                <td>@si.Finder</td>
                <td>
                    @if (si.TvmStatus == "Following")
                    {
                        <input @bind="@si.MediaType" size="2"/>
                    } else
                    {
                        @si.MediaType
                    }
                </td>
                <td>@si.TvmStatus</td>
                <td>@si.ShowStatus</td>
                @{
                    var splitDate = si.UpdateDate!.Split(' ');
                    <td>@splitDate[0]</td>
                }
                <td class="p-0">
                    @if (si.TvmStatus != "Reviewing")
                    {
                        if (si.TvmStatus == "New")
                        {
                            <button class="btn btn-primary" style="font-size: 85%; line-height: 85%" @onclick="@(() => EditShow(si))">Set Reviewing</button>
                        } else
                        {
                            <button class="btn btn-warning" style="font-size: 85%; line-height: 85%" @onclick="@(() => EditShow(si))">Submit Edit</button>

                            if (si.TvmStatus != "Skipping")
                            {
                                <button class="btn btn-danger" style="font-size: 85%; line-height: 85%" @onclick="@(() => SkipShow(si))">Skip</button>
                            }
                        }
                    }
                    @if (si.TvmStatus != "Following")
                    {
                        <button class="btn btn-danger mt-0 mb-0" style="font-size: 85%; line-height: 85%" @onclick="@(() => DeleteShow(si))">Delete</button>
                    }
                    <button class="btn btn-info mt-0 mb-0" style="font-size: 85%; line-height: 85%" @onclick="@(() => FindEpisodes(si))">Episodes</button>
                </td>
            </tr>
            _idx++;
        }
        </tbody>
    </table>
    <div>
        <em>Output has @_idx records</em>
    </div>
</div>