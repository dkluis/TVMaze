@namespace TVMazeWeb.Pages
@page "/"

@inject DataExchange _dataExchangeService

@{
    AppInfo appInfo = new("Tvmaze", "WebUI", "DbAlternate");

    const string showCount = "select count(*) from Shows";
    const string followedCount = "select count(*) from Followed";  // Change Later to exclude the skipped show
    const string followedShowsCount = "select count(*) from Shows where `TvmStatus` = 'Following'";
    const string reviewingShowsCount = "select count(*) from Shows where `TvmStatus` = 'Reviewing'";
    const string newShowsCount = "select count(*) from Shows where `TvmStatus` = 'New'";
    const string skippingShowCount = "select count(*) from Shows where `TvmStatus` = 'Skipping'";
    const string runningShowsCount = "select count(*) from Shows where `ShowStatus` = 'Running' and `TvmStatus` = 'Following'";
    const string tbdShowsCount = "select count(*) from Shows where `ShowStatus` = 'To Be Determined' and `TvmStatus` = 'Following'";
    const string inDevShowsCount = "select count(*) from Shows where `ShowStatus` = 'In Development' and `TvmStatus` = 'Following'";
    const string endedShowsCount = "select count(*) from Shows where `ShowStatus` = 'Ended' and `TvmStatus` = 'Following'";

    var numShows = "";
    var numFollowed = "";
    var numFollowedShows = "";
    var numReviewingShows = "";
    var numNewShows = "";
    var numSkipingShows = "";
    var numRunningShows = "";
    var numTbdShows = "";
    var numInDevShows = "";
    var numEndedShows = "";

    const string episodeCount = "select count(*) from Episodes";
    const string episodeWatchedCount = "select count(*) from Episodes where `PlexStatus` = 'Watched'";
    const string episodeAcquiredCount = "select count(*) from Episodes where `PlexStatus` = 'Acquired'";
    const string episodeSkippedCount = "select count(*) from Episodes where `PlexStatus` = 'Skipped'";
    const string episodeFutureCount = "select count(*) from Episodes where `PlexStatus` = ' ' and `BroadcastDate` is not NULL";
    const string episodeFutureUnknownCount = "select count(*) from Episodes where `PlexStatus` = ' ' and `BroadcastDate` is NULL";

    var numEpisodes = "";
    var numWatchedEpisodes = "";
    var numSkippedEpisodes = "";
    var numAcquiredEpisodes = "";
    var numFutureEpisodes = "";
    var numFutureUnknownEpisodes = "";

    MariaDb mdb = new(appInfo);

    var rdr = mdb.ExecQuery(showCount);
    while (rdr.Read())
    {
        numShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(followedCount);
    while (rdr.Read())
    {
        numFollowed = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(followedShowsCount);
    while (rdr.Read())
    {
        numFollowedShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(reviewingShowsCount);
    while (rdr.Read())
    {
        numReviewingShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(newShowsCount);
    while (rdr.Read())
    {
        numNewShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();
    
    rdr = mdb.ExecQuery(skippingShowCount);
    while (rdr.Read())
    {
        numSkipingShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(runningShowsCount);
    while (rdr.Read())
    {
        numRunningShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(tbdShowsCount);
    while (rdr.Read())
    {
        numTbdShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(inDevShowsCount);
    while (rdr.Read())
    {
        numInDevShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(endedShowsCount);
    while (rdr.Read())
    {
        numEndedShows = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(episodeCount);
    while (rdr.Read())
    {
        numEpisodes = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(episodeWatchedCount);
    while (rdr.Read())
    {
        numWatchedEpisodes = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(episodeAcquiredCount);
    while (rdr.Read())
    {
        numAcquiredEpisodes = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(episodeSkippedCount);
    while (rdr.Read())
    {
        numSkippedEpisodes = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(episodeFutureCount);
    while (rdr.Read())
    {
        numFutureEpisodes = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();

    rdr = mdb.ExecQuery(episodeFutureUnknownCount);
    while (rdr.Read())
    {
        numFutureUnknownEpisodes = int.Parse(rdr[0].ToString()!).ToString("###,##0");
    }
    mdb.Close();
}

@{ _dataExchangeService.LastPage = "Home"; }
<div>
    <h4>Shows Statistics</h4>
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Type</th>
            <th>Description</th>
            <th># of Records</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>Shows Table</td>
            <td>Total</td>
            <td>@numShows</td>
        </tr>
        <tr>
            <td>...Shows</td>
            <td>Status: New</td>
            <td>@numNewShows</td>
        </tr>
        <tr>
            <td>...Shows</td>
            <td>Status: Reviewing</td>
            <td>@numReviewingShows</td>
        </tr>
        <tr>
            <td>...Shows</td>
            <td>Status: Skipping</td>
            <td>@numSkipingShows</td>
        </tr>
        <tr>
            <td>...Shows</td>
            <td>Status: Following</td>
            <td>@numFollowedShows</td>
        </tr>
        <tr>
            <td>Followed Table</td>
            <td>Total</td>
            <td>@numFollowed</td>
        </tr>
        <tr>
            <td>...Shows (Following)</td>
            <td>Show Status: Running</td>
            <td>@numRunningShows</td>
        </tr>
        <tr>
            <td>...Shows (Following)</td>
            <td>Show Status: To Be Decided</td>
            <td>@numTbdShows</td>
        </tr>
        <tr>
            <td>...Shows (Following)</td>
            <td>Show Status: In Development</td>
            <td>@numInDevShows</td>
        </tr>
        <tr>
            <td>...Shows (Following)</td>
            <td>Show Status: Ended</td>
            <td>@numEndedShows</td>
        </tr>
        </tbody>
    </table>
</div>

<div>
    <h4>Episodes Statistics</h4>
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Type</th>
            <th>Description</th>
            <th ># of Records</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>Episodes Table</td>
            <td>Total</td>
            <td>@numEpisodes</td>
        </tr>
        <tr>
            <td>...Episodes</td>
            <td>Status: Watched</td>
            <td>@numWatchedEpisodes</td>
        </tr>
        <tr>
            <td>...Episodes</td>
            <td>Status: Available to Watch</td>
            <td>@numAcquiredEpisodes</td>
        </tr>
        <tr>
            <td>...Episodes</td>
            <td>Status: Skipped</td>
            <td>@numSkippedEpisodes</td>
        </tr>
        <tr>
            <td>...Episodes</td>
            <td>Status: Coming Soon</td>
            <td>@numFutureEpisodes</td>
        </tr>
        <tr>
            <td>...Episodes</td>
            <td>Status: Coming Unknown</td>
            <td>@numFutureUnknownEpisodes</td>
        </tr>
        </tbody>
    </table>
</div>